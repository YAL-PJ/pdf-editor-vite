/* ---------- Viewer ---------- */
#viewer {
  position: relative;
  display: block;              /* no shrink-to-fit */
  width: max-content;          /* expand to canvas width (can exceed container) */
  border: 1px solid var(--panel-border);
  border-radius: 8px;
  overflow: visible;
  background: #fff;
  box-shadow: 0 18px 40px -28px rgba(111, 58, 82, 0.6);
  max-width: none;             /* ← remove clamp */
}


/* Reserve stable area ONLY when no doc is loaded */
#viewer.placeholder {
  min-height: 480px;
  aspect-ratio: 612 / 792;     /* US Letter aspect ratio */
}

/* Ensure the inner canvas also reserves space during placeholder state */
#viewer.placeholder #pdfCanvas {
  width: 100%;
  height: auto;
  min-height: 480px;           /* match placeholder min-height */
  aspect-ratio: inherit;       /* keeps same ratio as #viewer */
  display: block;
}

.viewer-scroll {
  /* Scroll only when content actually exceeds the cap */
  overflow-y: auto;
  overflow-x: auto;

  /* Let container grow with content; cap when too tall */
  max-height: calc(100dvh - 200px);
  min-height: 480px;

  /* Prevent layout jiggle when scrollbar appears */
  scrollbar-gutter: stable both-edges;
}

/* Keep whole-page layout stable if body scrollbars appear */
html { scrollbar-gutter: stable both-edges; }

#pdfCanvas {
  display: block;
  position: relative;
  z-index: 1;                  /* below overlay */
  max-width: none;         /* ← remove clamp */
  height: auto;                /* keep natural aspect ratio */
}

/* Overlay sits above canvas and accepts input */
#annoLayer {
  position: absolute;
  inset: 0;                    /* left:0; top:0; right:0; bottom:0 */
  z-index: 2;
  pointer-events: auto;
}

/* Cursor by tool (use data-tool attribute) */
#annoLayer[data-tool="highlight"] { cursor: crosshair; }
#annoLayer[data-tool="note"]      { cursor: copy; }
#annoLayer:not([data-tool])       { cursor: grab; }
#annoLayer[data-tool="image"]     { cursor: crosshair; }
#annoLayer[data-tool="text"]      { cursor: text; }
/* while panning (drag-to-pan) */
#annoLayer.panning                 { cursor: grabbing; }

/* ---------- Performance optimizations ---------- */
#viewer,
#annoLayer,
.text-box,
.image-box {
  contain: layout paint;       /* reduces forced reflow scope */
}

/* Drag-to-pan affordance when the select tool is active */
.viewer-scroll.pannable { cursor: grab; }
.viewer-scroll.panning  { cursor: grabbing; }

.text-box,
.image-box {
  will-change: transform;      /* smooth translate/scale during drag/resize */
}

/* ---------- Toolbar ---------- */
#toolbar {
  display: flex;
  align-items: center;
  gap: 8px;
  flex-wrap: wrap;
  padding: 10px 12px;
  border: 1px solid var(--panel-border);
  border-radius: 12px;
  background: var(--panel);
  margin: 12px 0;
  min-height: 48px;            /* prevents shifts while toolbar hydrates */
}

#toolbar button {
  border: 1px solid var(--btn-border);
  background: var(--btn-bg);
  color: #fff;
  padding: 8px 12px;
  border-radius: 8px;
  cursor: pointer;
  transition: border-color .15s ease, background .15s ease, color .15s ease;
  min-height: 36px;            /* stable button size */
  white-space: nowrap;
}

#toolbar button:hover { border-color: var(--accent); }

#toolbar button.active {
  background: var(--accent);
  color: #0b1220;
  border-color: var(--accent);
}

#toolbar button:disabled {
  opacity: 0.55;
  cursor: not-allowed;
}

#toolbar span {
  color: var(--muted);
  white-space: nowrap;
}

/* Optional: instant pressed feedback if aria-pressed is set */
button[aria-pressed="true"] { outline: 2px solid var(--accent, #5ab); }


